/* uses benri-template ver.10.2: add position @content */

//ドメインURL
$domain-url: "https://benrineko.com";
//container
$container-margin: 10px;
$container-max-width: 1400px;
//header-logo
$header-height: 50px;
$logo-height: $header-height;
$logo-width: $logo-height * 3;
//side
$side-width: 300px;
$side-slide-px: $side-width + $container-margin;
$side-anime-time: 0.3s;
//フォント
$font-family: "Hiragino Mincho ProN", "Hiragino Mincho Pro", "MS Mincho",
  "Meiryo", serif;
$font-gothic-family: "Hiragino Kaku Gothic ProN", "Hiragino Kaku Gothic Pro",
  "MS Gothic", "Meiryo UI", sans-serif;
$font-size-large: 1.8rem;
$font-size-normal: 1rem;
$font-size-small: 0.9rem;
$font-size-button: 1.3rem;
//カラー
$red: #b71c1c;
$blue: #0d47a1;
// テーマカラー
$standard-bg-color: #fff;
$standard-color: #444;
//ジャンルの色
$life-color: #8bc34a;
$develop-color: #7a6a89;
// デバイス
$retina: "only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)";
$phone-max-width: 480px; 
$tablet-max-width: 768px; 
$desktop-max-width: 1024px; 
$large-desktop-max-width: 1200px;

/*=========  ===============*/
@mixin lessThan($device) {
  @if $device == phone {
    @media (max-width: $phone-max-width) { @content; }
  } @else if $device == tablet {
    @media (max-width: $tablet-max-width) { @content; }
  } @else if $device == desktop {
    @media (max-width: $desktop-max-width) { @content; }
  } @else if $device == ldesktop {
    @media (max-width: $ldesktop-max-width) { @content; }
  } @else {
    @error "Invalid device provided. Please use 'phone', 'tablet', 'desktop', or 'ldesktop'.";
  }
}
@mixin greaterThan($device) {
  @if $device == phone {
    @media (min-width: 0 + 1px) { @content; }
  } @else if $device == tablet {
    @media (min-width: $phone-max-width + 1px) { @content; }
  } @else if $device == desktop {
    @media (min-width: $tablet-max-width + 1px) { @content; }
  } @else if $device == ldesktop {
    @media (min-width: $desktop-max-width + 1px) { @content; }
  } @else {
    @error "Invalid device provided. Please use 'phone', 'tablet', 'desktop', or 'ldesktop'.";
  }
}
@mixin visible-element($height: 100%) {
  height: $height;
  opacity: 1;
  overflow: visible;
  @content
}
@mixin hidden-element {
  height: 0; //widthはアニメで型崩れ
  opacity: 0; //display: none;以外ならキーボード操作に対応できる
  overflow: hidden;
  @content
}
@mixin zero-bezel {
  margin: 0;
  padding: 0;
  @content
}
@mixin full-size {
  width: 100%;
  height: 100%;
  @content
}
@mixin custom-size($height, $width: null) {
  height: $height;
  @if $width != null {
    width: $width;
  }
  else {
    width: $height; //->正方形
  }
  @content
}
@mixin position($top: null, $right: null, $bottom: null, $left: null) {
  @if $top { top: $top;}
  @if $right {right: $right;}
  @if $bottom {bottom: $bottom;}
  @if $left {left: $left;}
}
@mixin fixed($top: null, $right: null, $bottom: null, $left: null) {
  position: fixed; //固定位置
  @include position($top, $right, $bottom, $left);
  @content
}
@mixin relative($top: null, $right: null, $bottom: null, $left: null) {
  position: relative; //相対位置（本来の位置を視点にします。）
  @include position($top, $right, $bottom, $left);
  @content
}
@mixin absolute($top: null, $right: null, $bottom: null, $left: null) {
  position: absolute; //絶対位置（親の位置を視点にします。擬似要素などで活躍。）
  @include position($top, $right, $bottom, $left);
  @content
}
@mixin flex-center($direction: row, $gap: 0) {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: $gap;
  @if $direction == column {
    flex-direction: column;
  }
  @content
}
@mixin flex-align($align: null) {
  display: flex;
  @if $align == start {
    align-items: flex-start;
  } @else if $align == end {
    align-items: flex-end;
  } @else if $align == center {
    align-items: center;
  } @else if $align == baseline {
    align-items: baseline;
  } @else {
  }
}
@mixin flex-between($direction: row, $align: null) {
  @include flex-align($align);
  justify-content: space-between; //間のスペースが均等
  @if $direction == column {
    flex-direction: column;
  }
  @content
}
@mixin flex-around($direction: row, $align: null) {
  @include flex-align($align);
  justify-content: space-around; //前後スペースが均等
  @if $direction == column {
    flex-direction: column;
  }
  @content
}
@mixin ad($width: 300px) {
  @include zero-bezel;
  @include custom-size($width);
  @include flex-center(column);
  p {
    margin: 0 auto;
    padding: 0 auto;
    text-align: center;
  }
  @content
}
@mixin flat-radius($border-radius: 4px) {
  border: none;
  border-radius: $border-radius;
  @content
}
@mixin img($height, $width, $image-url, $retina-url: false) {
  height: $height;
  width: $width;
  background-repeat: no-repeat;
  background-position: center;
  background-size: $width $height;
  background-image: url(#{$image-url});
  @if $retina-url {
    @media #{$retina} {
      background-image: url(#{$retina-url});
    }
  }
  @content
}
@mixin sankaku($direction: up, $color: null) {
  display: inline-block; //横向きに必要
  content: "▲";
  @if $direction == down {
    content: "▼";
  } @else if $direction == right {
    content: "▼"; //特殊文字は使わない
    transform: rotate(270deg);
    padding-top: 0.08rem;
  } @else if $direction == left {
    content: "▲"; //特殊文字は使わない
    transform: rotate(270deg);
    padding-top: 0.08rem;
  }
  @if $color != null {
    color: $color;
  }
  @content
}
@mixin font($family, $size, $line: normal, $spacing: normal) {
  font-family: $family;
  font-size: $size;
  line-height: $line;
  letter-spacing: $spacing;
  @content
}
@mixin standard-text-bg-colors($opt: no_reverse) {
  $bg-color: $standard-bg-color;
  $text-color: $standard-color;
  @if $opt == reverse {
    $bg-color: $standard-color;
    $text-color: $standard-bg-color;
  }
  background-color: $bg-color;
  color: $text-color;
  @content
}
@mixin custom-text-bg-colors($text-color, $bg-color: null) {
  color: $text-color;
  @if $bg-color {background-color: $bg-color;}
  else {background-color: $text-color;}
  @content
}
@mixin clickable {
  //bodyに設定すると便利です。
  button,
  a,
  [role="button"],
  [role="link"],
  [role="tab"],
  [role="menuitem"],
  [contenteditable="true"],
  [draggable="true"] {
    cursor: pointer;
  }
  @content
}
